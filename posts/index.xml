<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on NotePad</title><link>https://d3adloop.github.io/posts/posts/</link><description>Recent content in Posts on NotePad</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 05 Dec 2021 16:54:03 +0800</lastBuildDate><atom:link href="https://d3adloop.github.io/posts/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>如何在 Python 中编写可选参数的装饰器</title><link>https://d3adloop.github.io/posts/posts/how-to-write-optionally-callable-parametrized-decorators-in-python/</link><pubDate>Sun, 05 Dec 2021 16:54:03 +0800</pubDate><guid>https://d3adloop.github.io/posts/posts/how-to-write-optionally-callable-parametrized-decorators-in-python/</guid><description>&lt;h3 id="举个栗子">举个栗子&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">
&lt;span style="color:#008000;font-weight:bold">import&lt;/span> &lt;span style="color:#00f;font-weight:bold">pytest&lt;/span>
&lt;span style="color:#a2f">@pytest&lt;/span>&lt;span style="color:#666">.&lt;/span>fixture &lt;span style="color:#408080;font-style:italic"># No need to write &amp;#39;@pytest.fixture()&amp;#39;&lt;/span>
&lt;span style="color:#008000;font-weight:bold">def&lt;/span> &lt;span style="color:#00f">app&lt;/span>():
&lt;span style="color:#666">...&lt;/span>
&lt;span style="color:#a2f">@pytest&lt;/span>&lt;span style="color:#666">.&lt;/span>fixture(scope&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#ba2121">&amp;#34;session&amp;#34;&lt;/span>)
&lt;span style="color:#008000;font-weight:bold">def&lt;/span> &lt;span style="color:#00f">server&lt;/span>():
&lt;span style="color:#666">...&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="具体实现">具体实现&lt;/h3>
&lt;p>让我们用 &lt;code>@logged&lt;/code> 为函数编写一个装饰器&lt;/p>
&lt;p>它接受一个可选 &lt;code>decimals&lt;/code> 参数来将计算结果四舍五入。如果 &lt;code>decimals&lt;/code> 没有给出，我们根本不应该管它。&lt;/p>
&lt;p>因此，可能的调用方式应该是：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">
&lt;span style="color:#a2f">@logged&lt;/span>()
&lt;span style="color:#008000;font-weight:bold">def&lt;/span> &lt;span style="color:#00f">test&lt;/span>():
&lt;span style="color:#666">...&lt;/span>
&lt;span style="color:#a2f">@logged&lt;/span>(decimals&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#666">2&lt;/span>)
&lt;span style="color:#008000;font-weight:bold">def&lt;/span> &lt;span style="color:#00f">test&lt;/span>():
&lt;span style="color:#666">...&lt;/span>
&lt;span style="color:#a2f">@logged&lt;/span> &lt;span style="color:#408080;font-style:italic"># 相当于@logged() —— 实现这一点是这篇博文的目标&lt;/span>
&lt;span style="color:#008000;font-weight:bold">def&lt;/span> &lt;span style="color:#00f">test&lt;/span>():
&lt;span style="color:#666">...&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>切入正题，这是带注释的解决方案：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">
&lt;span style="color:#008000;font-weight:bold">import&lt;/span> &lt;span style="color:#00f;font-weight:bold">functools&lt;/span>
&lt;span style="color:#008000;font-weight:bold">import&lt;/span> &lt;span style="color:#00f;font-weight:bold">typing&lt;/span>
&lt;span style="color:#008000;font-weight:bold">def&lt;/span> &lt;span style="color:#00f">logged&lt;/span>(func: typing&lt;span style="color:#666">.&lt;/span>Callable &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#008000;font-weight:bold">None&lt;/span>, decimals: &lt;span style="color:#008000">int&lt;/span> &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#008000;font-weight:bold">None&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> typing&lt;span style="color:#666">.&lt;/span>Callable:
&lt;span style="color:#008000;font-weight:bold">if&lt;/span> func &lt;span style="color:#a2f;font-weight:bold">is&lt;/span> &lt;span style="color:#008000;font-weight:bold">None&lt;/span>:
&lt;span style="color:#008000">print&lt;/span>(&lt;span style="color:#ba2121">f&lt;/span>&lt;span style="color:#ba2121">&amp;#34;Called with decimals=&lt;/span>&lt;span style="color:#b68;font-weight:bold">{&lt;/span>decimals&lt;span style="color:#b68;font-weight:bold">}&lt;/span>&lt;span style="color:#ba2121">&amp;#34;&lt;/span>)
&lt;span style="color:#008000;font-weight:bold">return&lt;/span> functools&lt;span style="color:#666">.&lt;/span>partial(logged, decimals&lt;span style="color:#666">=&lt;/span>decimals)
&lt;span style="color:#008000">print&lt;/span>(&lt;span style="color:#ba2121">f&lt;/span>&lt;span style="color:#ba2121">&amp;#34;Called without parameters, func=&lt;/span>&lt;span style="color:#b68;font-weight:bold">{&lt;/span>func&lt;span style="color:#b68;font-weight:bold">}&lt;/span>&lt;span style="color:#ba2121">.&amp;#34;&lt;/span>)
&lt;span style="color:#a2f">@functools&lt;/span>&lt;span style="color:#666">.&lt;/span>wraps(func)
&lt;span style="color:#008000;font-weight:bold">def&lt;/span> &lt;span style="color:#00f">decorated&lt;/span>(&lt;span style="color:#666">*&lt;/span>args: typing&lt;span style="color:#666">.&lt;/span>Any, &lt;span style="color:#666">**&lt;/span>kwargs: typing&lt;span style="color:#666">.&lt;/span>Any) &lt;span style="color:#666">-&amp;gt;&lt;/span> typing&lt;span style="color:#666">.&lt;/span>Any:
&lt;span style="color:#008000">print&lt;/span>(&lt;span style="color:#ba2121">f&lt;/span>&lt;span style="color:#ba2121">&amp;#34;&lt;/span>&lt;span style="color:#b68;font-weight:bold">{&lt;/span>func&lt;span style="color:#666">.&lt;/span>__name__&lt;span style="color:#b68;font-weight:bold">}&lt;/span>&lt;span style="color:#ba2121"> called with args=&lt;/span>&lt;span style="color:#b68;font-weight:bold">{&lt;/span>args&lt;span style="color:#b68;font-weight:bold">}&lt;/span>&lt;span style="color:#ba2121">, kwargs=&lt;/span>&lt;span style="color:#b68;font-weight:bold">{&lt;/span>kwargs&lt;span style="color:#b68;font-weight:bold">}&lt;/span>&lt;span style="color:#ba2121">&amp;#34;&lt;/span>)
result &lt;span style="color:#666">=&lt;/span> func(&lt;span style="color:#666">*&lt;/span>args, &lt;span style="color:#666">**&lt;/span>kwargs)
logged_result &lt;span style="color:#666">=&lt;/span> result &lt;span style="color:#008000;font-weight:bold">if&lt;/span> decimals &lt;span style="color:#a2f;font-weight:bold">is&lt;/span> &lt;span style="color:#008000;font-weight:bold">None&lt;/span> &lt;span style="color:#008000;font-weight:bold">else&lt;/span> &lt;span style="color:#008000">round&lt;/span>(result, decimals)
&lt;span style="color:#008000">print&lt;/span>(&lt;span style="color:#ba2121">f&lt;/span>&lt;span style="color:#ba2121">&amp;#34;Result: &lt;/span>&lt;span style="color:#b68;font-weight:bold">{&lt;/span>logged_result&lt;span style="color:#b68;font-weight:bold">}&lt;/span>&lt;span style="color:#ba2121">&amp;#34;&lt;/span>)
&lt;span style="color:#008000;font-weight:bold">return&lt;/span> result
&lt;span style="color:#008000;font-weight:bold">return&lt;/span> decorated
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果我们运行以下脚本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">
&lt;span style="color:#a2f">@logged&lt;/span>
&lt;span style="color:#008000;font-weight:bold">def&lt;/span> &lt;span style="color:#00f">add&lt;/span>(x: &lt;span style="color:#008000">float&lt;/span>, y: &lt;span style="color:#008000">float&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#008000">float&lt;/span>:
&lt;span style="color:#008000;font-weight:bold">return&lt;/span> x &lt;span style="color:#666">+&lt;/span> y
&lt;span style="color:#a2f">@logged&lt;/span>(decimals&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#666">2&lt;/span>)
&lt;span style="color:#008000;font-weight:bold">def&lt;/span> &lt;span style="color:#00f">mult&lt;/span>(x: &lt;span style="color:#008000">float&lt;/span>, y: &lt;span style="color:#008000">float&lt;/span>) &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#008000">float&lt;/span>:
&lt;span style="color:#008000;font-weight:bold">return&lt;/span> x &lt;span style="color:#666">*&lt;/span> y
&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">
add(&lt;span style="color:#666">2&lt;/span>, &lt;span style="color:#666">2&lt;/span>)
mult(&lt;span style="color:#666">3&lt;/span>, &lt;span style="color:#666">4&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们得到以下输出：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">
Called without parameters, func&lt;span style="color:#666">=&amp;lt;&lt;/span>function add at &lt;span style="color:#666">0x10d8d8b70&lt;/span>&lt;span style="color:#666">&amp;gt;.&lt;/span>
Called &lt;span style="color:#008000;font-weight:bold">with&lt;/span> decimals&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#666">2&lt;/span>
Called without parameters, func&lt;span style="color:#666">=&amp;lt;&lt;/span>function mult at &lt;span style="color:#666">0x10db18a60&lt;/span>&lt;span style="color:#666">&amp;gt;.&lt;/span>
add called &lt;span style="color:#008000;font-weight:bold">with&lt;/span> args&lt;span style="color:#666">=&lt;/span>(&lt;span style="color:#666">2&lt;/span>, &lt;span style="color:#666">2&lt;/span>), kwargs&lt;span style="color:#666">=&lt;/span>{}
Result: &lt;span style="color:#666">4&lt;/span>
mult called &lt;span style="color:#008000;font-weight:bold">with&lt;/span> args&lt;span style="color:#666">=&lt;/span>(&lt;span style="color:#666">3&lt;/span>, &lt;span style="color:#666">4&lt;/span>), kwargs&lt;span style="color:#666">=&lt;/span>{}
Result: &lt;span style="color:#666">12&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="通用实现">通用实现&lt;/h3>
&lt;p>这个 100% 的通用实现没有任何注释和调试输出。只需将其复制粘贴到某处并根据您的需要进行调整即可。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">
&lt;span style="color:#008000;font-weight:bold">import&lt;/span> &lt;span style="color:#00f;font-weight:bold">functools&lt;/span>
&lt;span style="color:#008000;font-weight:bold">import&lt;/span> &lt;span style="color:#00f;font-weight:bold">typing&lt;/span>
&lt;span style="color:#008000;font-weight:bold">def&lt;/span> &lt;span style="color:#00f">decorate&lt;/span>(func: typing&lt;span style="color:#666">.&lt;/span>Callable &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#008000;font-weight:bold">None&lt;/span>, &lt;span style="color:#666">**&lt;/span>options: typing&lt;span style="color:#666">.&lt;/span>Any) &lt;span style="color:#666">-&amp;gt;&lt;/span> typing&lt;span style="color:#666">.&lt;/span>Callable:
&lt;span style="color:#008000;font-weight:bold">if&lt;/span> func &lt;span style="color:#a2f;font-weight:bold">is&lt;/span> &lt;span style="color:#008000;font-weight:bold">None&lt;/span>:
&lt;span style="color:#008000;font-weight:bold">return&lt;/span> functools&lt;span style="color:#666">.&lt;/span>partial(decorate, &lt;span style="color:#666">**&lt;/span>options)
&lt;span style="color:#a2f">@functools&lt;/span>&lt;span style="color:#666">.&lt;/span>wraps(func)
&lt;span style="color:#008000;font-weight:bold">def&lt;/span> &lt;span style="color:#00f">decorated&lt;/span>(&lt;span style="color:#666">*&lt;/span>args: typing&lt;span style="color:#666">.&lt;/span>Any, &lt;span style="color:#666">**&lt;/span>kwargs: typing&lt;span style="color:#666">.&lt;/span>Any) &lt;span style="color:#666">-&amp;gt;&lt;/span> typing&lt;span style="color:#666">.&lt;/span>Any:
&lt;span style="color:#008000;font-weight:bold">return&lt;/span> func(&lt;span style="color:#666">*&lt;/span>args, &lt;span style="color:#666">**&lt;/span>kwargs)
&lt;span style="color:#008000;font-weight:bold">return&lt;/span> decorated
&lt;/code>&lt;/pre>&lt;/div>&lt;p>就是这样了。&lt;/p></description></item><item><title>Hello World</title><link>https://d3adloop.github.io/posts/posts/hello/</link><pubDate>Sun, 27 Jun 2021 16:54:03 +0800</pubDate><guid>https://d3adloop.github.io/posts/posts/hello/</guid><description>&lt;p>世界你好。&lt;/p></description></item></channel></rss>